---
layout: post
title:  "[etc] 그리디 - 조이스틱 - 실패"
subtitle:   ""
categories: dev
tags: ct
--- 

# 문제 설명
조이스틱으로 알파벳 이름을 완성하세요. 맨 처음엔 A로만 이루어져 있습니다.
ex) 완성해야 하는 이름이 세 글자면 AAA, 네 글자면 AAAA

조이스틱을 각 방향으로 움직이면 아래와 같습니다.

▲ - 다음 알파벳
▼ - 이전 알파벳 (A에서 아래쪽으로 이동하면 Z로)
◀ - 커서를 왼쪽으로 이동 (첫 번째 위치에서 왼쪽으로 이동하면 마지막 문자에 커서)
▶ - 커서를 오른쪽으로 이동
예를 들어 아래의 방법으로 "JAZ"를 만들 수 있습니다.

- 첫 번째 위치에서 조이스틱을 위로 9번 조작하여 J를 완성합니다.
- 조이스틱을 왼쪽으로 1번 조작하여 커서를 마지막 문자 위치로 이동시킵니다.
- 마지막 위치에서 조이스틱을 아래로 1번 조작하여 Z를 완성합니다.
따라서 11번 이동시켜 "JAZ"를 만들 수 있고, 이때가 최소 이동입니다.
만들고자 하는 이름 name이 매개변수로 주어질 때, 이름에 대해 조이스틱 조작 횟수의 최솟값을 return 하도록 solution 함수를 만드세요.

# 제한 사항
name은 알파벳 대문자로만 이루어져 있습니다.
name의 길이는 1 이상 20 이하입니다.
입출력 예



# 내소스 - 실패
```javascript
function solution(name) {
    
    if(name.length == 0  ) return 0;
    var answer = 0;
    var alpa = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H','I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
    
    let updown = [];
    
    var nindex=0;
    var names = name.length;
    
    for(var i=0; i<names;i++)
    {
        nindex = alpa.indexOf( name[i] );
        //13개보다 크면  아래로  , 13개보다 작으면 위로
        updown.push( nindex > 13 ? alpa.length - nindex : nindex )
        
    };
    console.log( updown )
    
    //위 아래로 움직인수 일단 다 더했음.
    answer+= updown.reduce(function(a,b){
        return a+b;
    });
    
    //이제 왼쪽으로 갈지 오른쪽으로 얼만큼 가야 더 짧은지 결정
    var right_ = JSON.parse(JSON.stringify( updown )); //깊은 복사
    
    while(true){
        if( right_[right_.length-1] == 0){
            right_.pop();
        }else{
            break;
        };
    };
    var rightCnt = right_.length-1;

    var left_ = JSON.parse(JSON.stringify( updown ));
    left_.shift()
    left_.push(updown[0])
    left_.reverse()
    while(true){
        if( left_[left_.length-1] == 0){
            left_.pop();
        }else{
            break;
        }
    }
    var leftCnt = left_.length-1;
    
    var mv = leftCnt > rightCnt ? rightCnt : leftCnt; //좌우로 더 짧게 움직인수
    mv = mv < 0 ? 0 : mv; //안움직여서 - 뜬거

    //그리고 왼쪽으로 쭉갔다가 오른쪽으로 쭉간거 or 오른쪽으로 쭉갔다가 왼쪽으로 쭉간거
    var r = (updown.length - updown.lastIndexOf(0)-1)  ;
    var l = (updown.length - updown.indexOf(0)-1)  ;
    var aa = (2*r)+l;
    var bb = (r)+(2*l);
    var abc = aa < bb ? aa : bb;
    mv = mv < abc ? mv : abc;

    //이부분을 모르겠단 말이야... 

    
    return answer+mv;
}

```