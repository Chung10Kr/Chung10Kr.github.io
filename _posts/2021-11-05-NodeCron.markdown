---
layout: post
title:  '[Node] node-cron vs setinterval'
subtitle:   ""
categories: note
--- 

스케줄 돌리는 Node소스에 cron이 있길래 setinterval과 비교하려 한다.

# setinterval()

일정한 시간 간격으로 작업을 수행하기 위해서 사용하며 clearInterval함수를 사용하여 중지 할 수 있다.
주의할 점은 일정한 시간 간격으로 실행되는 작업이 그 시간 간격보다 오래걸릴 경우 문제가 발생할 수 있다.

- 기본사용법
```javascript
    setinterval(function(){
        //
        //
        //
    }, 1000);
```

- 정지
```javascript
function StartClock() {
    PrintTime();
    timerId = setInterval(PrintTime, 1000);
}
// 시계 중지
function StopClock() {
    if(timerId != null) {
        clearInterval(timerId);
    }
}
```

# node-cron

왜 우리 리눅스에서 크론탭할때 그 크론

- npm 설치
```javascript
//install
npm install --save node-cron
```

- 기본사용법
```javascript
var cron = require('node-cron');
/*
 # ┌────────────── second (optional)
 # │ ┌──────────── minute
 # │ │ ┌────────── hour
 # │ │ │ ┌──────── day of month
 # │ │ │ │ ┌────── month
 # │ │ │ │ │ ┌──── day of week
 # │ │ │ │ │ │
 # │ │ │ │ │ │
 # * * * * * *
*/
cron.schedule('* * * * *', () => {
  console.log('running a task every minute');
});

cron.schedule('* * * January,September Sunday', () => {
  console.log('running on Sundays of January and September');
});

```

- 정지
```javascript
var task = cron.schedule('* * * * *', () =>  {
  console.log('will execute every minute until stopped');
});

task.stop();
```

### 비교

반복적인 작업을 실행할때는 setInterval()
특정 시간에 작업 진행을 실행할때는 cron
